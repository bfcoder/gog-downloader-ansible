---
- name: Add dependencies
  apt:
    name:
      - build-essential
      - libcurl4-openssl-dev
      - libboost-regex-dev
      - libjsoncpp-dev
      - librhash-dev
      - libtinyxml2-dev
      - libhtmlcxx-dev
      - libboost-system-dev
      - libboost-filesystem-dev
      - libboost-program-options-dev
      - libboost-date-time-dev
      - libboost-iostreams-dev
      - help2man
      - cmake
      - pkg-config
      - zlib1g-dev
      - qtwebengine5-dev
      - ninja-build
    state: latest
    update_cache: true

- name: Clone lgogdownloader repo
  ansible.builtin.git:
    repo: https://github.com/Sude-/lgogdownloader.git
    dest: /src/lgogdownloader
    single_branch: yes
    version: v3.11

- name: Build lgogdownloader
  become: yes
  command: chdir=/src/lgogdownloader cmake -B build -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DUSE_QT_GUI=ON -GNinja

- name: Install lgogdownloader
  become: yes
  command: chdir=/src/lgogdownloader ninja -Cbuild install

- name: Create log file
  ansible.builtin.file:
    path: /var/log/gogdownloader.log
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_user}}"
    mode: u=rw,g=rw,o=
    state: touch
  become: yes

- name: Copy gogdownloader script
  template:
    src: gogdownloader.sh
    dest: "/src/gogdownloader.sh"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_user}}"
    mode: u=rwx,g=rwx,o=

- name: Create gog downloader cron
  ansible.builtin.cron:
    name: "Run GOG downloader"
    minute: "0"
    hour: "5"
    job: "/src/gogdownloader.sh"
    cron_file: gogdownloader
    user: "{{ansible_ssh_user}}"
